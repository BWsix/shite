{"version":3,"sources":["colors lazy /^/.*/.css$/ groupOptions: {} namespace object","routes/login/auth.tsx","routes/login/Login.tsx","functions/_local_userinfo.tsx","functions/updateUser.tsx","functions/encodeContent.tsx","routes/main/ImageUploader.tsx","components/InputField.tsx","components/Status.tsx","hooks/useUserInfo.tsx","components/UserIcon.tsx","components/ParseContent.tsx","routes/main/MakePost.tsx","routes/main/publishPost.tsx","pages/posts/PostContext.tsx","pages/posts/components/Content.tsx","pages/posts/Stats/ShiteButton.tsx","pages/posts/functions/updateShite.tsx","pages/posts/Stats/TimePosted.tsx","pages/posts/Stats/ToggleComments.tsx","pages/posts/Stats/Stats.tsx","pages/posts/functions/updatePost.tsx","pages/posts/components/Options.tsx","pages/posts/functions/deletePost.tsx","pages/posts/components/PostEditor.tsx","pages/posts/components/SharePost.tsx","functions/getYoutubeId.tsx","pages/posts/components/Youtube.tsx","pages/posts/comments/Comment.tsx","pages/posts/comments/AddComment.tsx","pages/posts/functions/publishComment.tsx","pages/posts/hooks/useComments.tsx","pages/posts/hooks/useListener.tsx","pages/posts/comments/Comments.tsx","pages/posts/Post.tsx","pages/posts/Posts.tsx","routes/main/Main.tsx","routes/navbar/Menu.tsx","functions/switch_theme.tsx","routes/navbar/Navbar.tsx","routes/navbar/useScroll.tsx","routes/user/useUser.tsx","routes/user/Banner/BioEditor.tsx","routes/user/Banner/updateBanner.tsx","routes/user/Banner/Bio.tsx","routes/user/Banner/Cover.tsx","routes/user/Banner/Banner.tsx","routes/user/User.tsx","routes/onePost/OnePost.tsx","hooks/useGetPost.tsx","App.tsx","pages/posts/hooks/usePosts.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","signIn","a","provider","firebase","auth","GoogleAuthProvider","signInWithRedirect","signOut","window","location","reload","Login","className","onClick","_get_userinfoList","JSON","parse","localStorage","getItem","setItem","stringify","_","name","avatar","storage_userinfo_get","uid","userInfoList","storage_userinfo_update","items","_update_userinfo","updateUser","user","displayName","photoURL","docRef","db","collection","doc","get","exists","update","set","bio","cover","following","posts","encodeContent","content","trim","replace","ImageUploader","image_str","setImage_str","title","title_cancel","inputRef","useRef","resizeFile","file","Resizer","imageFileResizer","uri","onInputChange","evt","target","files","image","style","display","htmlFor","type","ref","accept","onChange","value","length","current","InputField","setContent","rows","publishButton","placeholder","useState","content_lines","setRows","Math","max","split","onKeyDown","key","shiftKey","preventDefault","onKeyUp","click","Status","script","flexDirection","justifyContent","height","textAlign","useUserInfo","withCover","setName","setAvatar","setBio","setCover","error","setError","useEffect","userInfo","prev","snap","UserIcon","redirect","withName","hover","size","src","alt","undefined","width","to","ParseContent","center","markdown","children","replaceAll","line","word","startsWith","href","String","fromCharCode","v4","MakePost","useContext","UserContext","setImage","setMarkdown","margin","borderRadius","onPaste","clipboardData","padding","marginBottom","add","author","createdAt","firestore","FieldValue","serverTimestamp","shiters","comments","createdDoc","postId","uuid","arrayUnion","publishPost","maxWidth","PostContext","React","createContext","Content","post","ShiteButton","includes","shite","setShite","action","arrayRemove","updateShite","TimePosted","flexWrap","color","toLocaleDateString","toLocaleTimeString","ToggleComments","setToggleComments","commentCount","Stats","updatePost","Options","toggleEdit","setToggleEdit","editedContent","confirm","forEach","elem","delete","PostEditor","setEditedContent","SharePost","navigator","clipboard","writeText","origin","getYoutubeId","input","match","Youtube","aspectRatio","frameBorder","allow","allowFullScreen","Comment","cmt","commentSectionRef","atBottom","commentBlock","comment","is_new","cmtSection","scrollTo","scrollHeight","AddComment","paddingLeft","marginTop","publishComment","useComments","setPost","limit","isPostExist","setIsPostExist","setComments","commentIds","setCommentIds","fetchedIds","setFetchedIds","initialIds","setInitialIds","toggle","setToggle","end","setEnd","onSnapshot","filter","tuple","data","commentId","toDate","catch","err","append_comment","slice","reverse","prepend_comment","useListener","setPosts","setAction","lastActionId","setLastActionId","find","new_doc","Comments","setAtBottom","onScroll","scrollTop","dataLength","next","hasMore","inverse","scrollableTarget","loader","index","Post","_post","toggleComments","Provider","Posts","POSTS","endMessage","Main","Menu","handle_color","selectedColor","systemColor","matchMedia","matches","pathname","theme","clear","Navbar","scrollDown","scrollDir","setScrollDir","lastScrollY","pageYOffset","ticking","updateScrollDir","scrollY","abs","requestAnimationFrame","addEventListener","removeEventListener","useScroll","onMouseEnter","onMouseLeave","onFocus","onBlur","useUser","postIds","setPostIds","toFetchIds","setToFetchIds","requestedIds","setRequestedIds","new_ids","toRender","append_post","BioEditor","editedBio","setEditedBio","setToggleEditBio","Bio","isOwner","toggleEditBio","Cover","cover_str","setCover_str","updateCover","Banner","User","OnePost","orderBy","docs","useGetPost","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","useAuthState","loading","startAfter","empty","useGetPrevPosts","basename","exact","path","render","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ade5a716.chunk.js","sourcesContent":["var map = {\n\t\"./dark.css\": [\n\t\t229,\n\t\t3\n\t],\n\t\"./light.css\": [\n\t\t230,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 226;\nmodule.exports = webpackAsyncContext;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport { auth } from \"../../App\";\r\n\r\nexport const signIn = async () => {\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  await auth.signInWithRedirect(provider);\r\n};\r\n\r\nexport const signOut = async () => {\r\n  await auth.signOut();\r\n  window.location.reload();\r\n};\r\n","import React from \"react\";\r\n\r\nimport { signIn } from \"./auth\";\r\n\r\nimport \"./Login.css\";\r\nimport \"../../styles/button.css\";\r\n\r\nexport const Login: React.FC = () => {\r\n  return (\r\n    <div className=\"Login\">\r\n      <h1 className=\"Login-title\">Shite.</h1>\r\n      <button className=\"btn-thick btn-round\" onClick={signIn}>\r\n        💩 Login with Google 💩\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","const _get_userinfoList = () => {\r\n  const _init_userinfo = () => {\r\n    localStorage.setItem(\r\n      \"userInfo\",\r\n      JSON.stringify({ _: { name: \"\", avatar: \"\" } })\r\n    );\r\n    return { _: { name: \"\", avatar: \"\" } };\r\n  };\r\n\r\n  let userInfoList = JSON.parse(localStorage.getItem(\"userInfo\")!);\r\n  return userInfoList || _init_userinfo();\r\n};\r\n\r\nexport const storage_userinfo_get = (\r\n  uid: string\r\n): { name: string; avatar: string } | undefined => {\r\n  let userInfoList = _get_userinfoList();\r\n  if (uid in userInfoList) {\r\n    return { name: userInfoList[uid].name, avatar: userInfoList[uid].avatar };\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\nexport const storage_userinfo_update = (\r\n  uid: string,\r\n  name: string,\r\n  avatar: string\r\n) => {\r\n  const _update_userinfo = (uid: string, name: string, avatar: string) => {\r\n    const items = JSON.parse(localStorage.getItem(\"userInfo\")!);\r\n    items[uid] = { name, avatar };\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(items));\r\n  };\r\n\r\n  _get_userinfoList();\r\n  _update_userinfo(uid, name, avatar);\r\n};\r\n\r\nexport const storage_userinfo_clear = () => {\r\n  localStorage.removeItem(\"userInfo\");\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport { db } from \"../App\";\r\n\r\nimport { storage_userinfo_update } from \"./_local_userinfo\";\r\n\r\nexport const updateUser = (user: firebase.User) => {\r\n  storage_userinfo_update(user.uid, user.displayName!, user.photoURL!);\r\n\r\n  let docRef = db.collection(\"users\").doc(user.uid);\r\n  docRef.get().then((doc) => {\r\n    if (doc.exists) {\r\n      docRef.update({\r\n        name: user.displayName,\r\n        avatar: user.photoURL,\r\n      });\r\n    } else {\r\n      docRef.set({\r\n        name: user.displayName,\r\n        avatar: user.photoURL,\r\n        bio: \"\",\r\n        cover: \"\",\r\n        following: [user.uid],\r\n        posts: [],\r\n      });\r\n    }\r\n  });\r\n};\r\n","export const encodeContent = (content: string) => {\r\n  return content.trim().replace(/[\\r\\n]/g, \"n_n_\");\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport Resizer from \"react-image-file-resizer\";\r\n\r\nimport \"./Main.css\";\r\nimport \"../../styles/button.css\";\r\n\r\ninterface ImageUploaderProps {\r\n  image_str: string;\r\n  setImage_str: React.Dispatch<React.SetStateAction<string>>;\r\n  title?: string;\r\n  title_cancel?: string;\r\n}\r\n\r\nexport const ImageUploader: React.FC<ImageUploaderProps> = ({\r\n  image_str,\r\n  setImage_str,\r\n  title,\r\n  title_cancel,\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const resizeFile = (file: File) =>\r\n    new Promise((resolve) => {\r\n      Resizer.imageFileResizer(\r\n        file,\r\n        650,\r\n        750,\r\n        \"JPEG\",\r\n        100,\r\n        0,\r\n        (uri) => {\r\n          resolve(uri);\r\n        },\r\n        \"base64\"\r\n      );\r\n    });\r\n\r\n  const onInputChange = async (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = evt.target.files![0];\r\n    const image = await resizeFile(file);\r\n    setImage_str(image as string);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <label htmlFor=\"image_uploader\" className=\"Upload btn-thin btn-sharp\">\r\n        <small>{image_str ? \"Choose another\" : title || \"Add an Image\"}</small>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        ref={inputRef}\r\n        accept=\"image/x-png, image/jpeg\"\r\n        id=\"image_uploader\"\r\n        style={{ display: \"none\" }}\r\n        onChange={(evt) => {\r\n          if (!evt.target.value.length) return;\r\n          onInputChange(evt);\r\n        }}\r\n      />\r\n      {image_str && (\r\n        <button\r\n          className=\"btn-thin btn-sharp btn-left\"\r\n          onClick={() => {\r\n            setImage_str(\"\");\r\n            inputRef.current!.value = \"\";\r\n          }}\r\n        >\r\n          <small>{title_cancel || \"Remove\"}</small>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./InputField.css\";\r\n\r\ninterface InputFieldProps {\r\n  content: string;\r\n  setContent: React.Dispatch<React.SetStateAction<string>>;\r\n  rows?: number;\r\n  publishButton?: React.MutableRefObject<HTMLButtonElement | null>;\r\n  placeholder?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const InputField: React.FC<InputFieldProps> = ({\r\n  content,\r\n  setContent,\r\n  rows,\r\n  publishButton,\r\n  placeholder = \"What's on your mind, folk?\",\r\n  style,\r\n}) => {\r\n  const [content_lines, setRows] = useState(() => 1);\r\n\r\n  return (\r\n    <>\r\n      <textarea\r\n        value={content}\r\n        rows={Math.max(content_lines + 1, rows || 3)}\r\n        className=\"InputField\"\r\n        style={style}\r\n        placeholder={\r\n          publishButton ? \"Enter: publish\\nShift+Enter: new line\" : placeholder\r\n        }\r\n        onChange={(evt) => {\r\n          setContent(evt.target.value);\r\n          setRows(evt.target.value.split(\"\\n\").length);\r\n        }}\r\n        onKeyDown={(evt) => {\r\n          if (publishButton)\r\n            if (evt.key === \"Enter\" && !evt.shiftKey) evt.preventDefault();\r\n        }}\r\n        onKeyUp={(evt) => {\r\n          if (publishButton)\r\n            if (evt.key === \"Enter\" && !evt.shiftKey)\r\n              publishButton.current!.click();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\ninterface statusProps {\r\n  content: \"loading\" | \"error\" | string;\r\n}\r\n\r\nexport const Status: React.FC<statusProps> = ({ content }) => {\r\n  let script = \"\";\r\n\r\n  if (content === \"loading\") {\r\n    script = \"Loading...\";\r\n  } else if (content === \"error\") {\r\n    script = \"Error.\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: \"60px\",\r\n      }}\r\n    >\r\n      <span style={{ textAlign: \"center\" }}>\r\n        💩 {script.length ? script : content} 💩\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { db } from \"../App\";\r\n\r\nimport {\r\n  storage_userinfo_get,\r\n  storage_userinfo_update,\r\n} from \"../functions/_local_userinfo\";\r\n\r\nexport const useUserInfo = (uid: string, withCover: boolean = false) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"https://i.imgur.com/xicaprt.png\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [cover, setCover] = useState(\"https://i.imgur.com/PZxq3zy.png\");\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let userInfo = storage_userinfo_get(uid);\r\n\r\n    if (userInfo) {\r\n      setName((prev) => userInfo!.name);\r\n      setAvatar((prev) => userInfo!.avatar);\r\n    } else {\r\n      db.collection(\"users\")\r\n        .doc(uid)\r\n        .get()\r\n        .then((snap) => {\r\n          if (!snap.exists) return setError(true);\r\n\r\n          setName(snap.get(\"name\"));\r\n          setAvatar(snap.get(\"avatar\"));\r\n          storage_userinfo_update(uid, snap.get(\"name\"), snap.get(\"avatar\"));\r\n        });\r\n    }\r\n\r\n    if (withCover) {\r\n      db.collection(\"users\")\r\n        .doc(uid)\r\n        .get()\r\n        .then((snap) => {\r\n          if (!snap.exists) return setError(true);\r\n\r\n          setBio(snap.get(\"bio\"));\r\n          setCover(snap.get(\"cover\") || \"https://i.imgur.com/PZxq3zy.png\");\r\n        });\r\n    }\r\n  }, [uid]);\r\n\r\n  return { name, avatar, bio, cover, error };\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useUserInfo } from \"../hooks/useUserInfo\";\r\n\r\nimport \"./UserIcon.css\";\r\n\r\ninterface UserIconProps {\r\n  type: \"small\" | \"large\";\r\n  uid: string;\r\n  redirect?: true;\r\n  withName?: true;\r\n  hover?: true;\r\n}\r\n\r\nexport const UserIcon: React.FC<UserIconProps> = ({\r\n  type,\r\n  uid,\r\n  redirect,\r\n  withName,\r\n  hover,\r\n}) => {\r\n  const { name, avatar } = useUserInfo(uid);\r\n\r\n  const size = (() => {\r\n    if (type === \"small\") return 35;\r\n    if (type === \"large\") return 55;\r\n  })();\r\n\r\n  let content = (\r\n    <img\r\n      src={avatar}\r\n      alt={name}\r\n      className={hover ? \"UserIcon UserIcon-hover\" : \"UserIcon\"}\r\n      title={redirect ? \"go to \" + name + \"' page\" : undefined}\r\n      style={{ width: size, height: size }}\r\n    />\r\n  );\r\n\r\n  if (redirect) {\r\n    content = <Link to={`/user/${uid}`}>{content}</Link>;\r\n  }\r\n\r\n  if (withName) {\r\n    content = (\r\n      <div className=\"UserIcon-withName\">\r\n        {content}\r\n        <div className=\"UserIcon-Name\">\r\n          <b>{name}</b>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return content;\r\n};\r\n","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport \"./ParseContent.css\";\r\n\r\ninterface ParseContentProps {\r\n  content: string;\r\n  center?: true;\r\n  markdown?: boolean;\r\n}\r\n\r\nexport const ParseContent: React.FC<ParseContentProps> = ({\r\n  content,\r\n  center,\r\n  markdown,\r\n}) => {\r\n  return (\r\n    <>\r\n      {markdown ? (\r\n        <div className=\"ParseContent-url\">\r\n          <ReactMarkdown children={content.replaceAll(\"n_n_\", \"\\n\\n&nbsp;\")} />\r\n        </div>\r\n      ) : (\r\n        content.split(\"n_n_\").map((line) => (\r\n          <div\r\n            key={v4()}\r\n            className=\"ParseContent-line ParseContent-url\"\r\n            style={center && { display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            {line.split(\" \").map((word) => (\r\n              <span key={v4()} className=\"ParseContent-word\">\r\n                {word.startsWith(\"https://\") || word.startsWith(\"http://\") ? (\r\n                  <a href={word}>{word + String.fromCharCode(160)}</a>\r\n                ) : (\r\n                  word + String.fromCharCode(160)\r\n                )}\r\n              </span>\r\n            ))}\r\n            <br />\r\n          </div>\r\n        ))\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport Resizer from \"react-image-file-resizer\";\r\n\r\nimport { publishPost } from \"./publishPost\";\r\nimport { ImageUploader } from \"./ImageUploader\";\r\nimport { UserContext } from \"../../App\";\r\nimport { UserIcon, InputField } from \"../../components/hub\";\r\n\r\nimport \"../../styles/button.css\";\r\nimport \"../../pages/posts/Post.css\";\r\nimport \"../../pages/posts/Stats/Stats.css\";\r\n\r\nexport const MakePost: React.FC = () => {\r\n  const user = useContext(UserContext);\r\n\r\n  const [content, setContent] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [markdown, setMarkdown] = useState(false);\r\n\r\n  const resizeFile = (file: File) =>\r\n    new Promise((resolve) => {\r\n      Resizer.imageFileResizer(\r\n        file,\r\n        650,\r\n        750,\r\n        \"JPEG\",\r\n        100,\r\n        0,\r\n        (uri) => {\r\n          resolve(uri);\r\n        },\r\n        \"base64\"\r\n      );\r\n    });\r\n\r\n  const handle_publish = () => {\r\n    if (!content.trim().length && !image) {\r\n      return setContent(\"\");\r\n    }\r\n    publishPost(user.uid, content, image, markdown);\r\n    setContent(\"\");\r\n    setImage(\"\");\r\n    setMarkdown(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"Post-outer\"\r\n      style={{\r\n        width: \"100%\",\r\n        margin: \"calc(1vh + 15px) 0\",\r\n        borderRadius: \"10px\",\r\n      }}\r\n      onPaste={async (evt) => {\r\n        if (!evt.clipboardData.files[0]) return;\r\n\r\n        const file = evt.clipboardData.files[0];\r\n        const image = await resizeFile(file);\r\n        setImage(image as string);\r\n      }}\r\n    >\r\n      <div style={{ padding: \"10px\" }}>\r\n        <UserIcon type=\"large\" uid={user.uid} withName={true} />\r\n\r\n        <div className=\"Post-content\">\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            <InputField content={content} setContent={setContent} rows={4} />\r\n          </div>\r\n\r\n          {/*this class disappears when deployed to firebase hosting. wtf???*/}\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <ImageUploader image_str={image} setImage_str={setImage} />\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <button\r\n                className={`btn-thin btn-sharp ShiteCount-${\r\n                  markdown ? \"trigger\" : \"btn\"\r\n                }`}\r\n                onClick={() => setMarkdown((prev) => !prev)}\r\n              >\r\n                markdown({markdown ? \"o\" : \"x\"})\r\n              </button>\r\n              <button\r\n                className=\"btn-thin btn-sharp btn-left\"\r\n                onClick={handle_publish}\r\n              >\r\n                Publish\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {image && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <img\r\n            src={image}\r\n            alt=\"img\"\r\n            style={{ maxWidth: \"100%\", height: \"auto\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { v4 } from \"uuid\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { encodeContent } from \"../../functions/hub\";\r\nimport { db } from \"../../App\";\r\n\r\nexport const publishPost = (\r\n  uid: string,\r\n  content: string = \"\",\r\n  image: string = \"\",\r\n  markdown: boolean = false\r\n) => {\r\n  db.collection(\"posts\")\r\n    .add({\r\n      content: encodeContent(content),\r\n      author: uid,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      image: image,\r\n      shiters: [],\r\n      comments: [],\r\n      markdown: markdown,\r\n    })\r\n    .then((createdDoc) => {\r\n      db.collection(\"activities\").doc(\"posts\").update({\r\n        type: \"add\",\r\n        postId: createdDoc.id,\r\n        uuid: v4(),\r\n      });\r\n      db.collection(\"users\")\r\n        .doc(uid)\r\n        .update({\r\n          posts: firebase.firestore.FieldValue.arrayUnion(createdDoc.id),\r\n        });\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { PostProps } from \"./types\";\r\n\r\ninterface usePost {\r\n  post: PostProps;\r\n  setPost: React.Dispatch<React.SetStateAction<PostProps>>;\r\n}\r\nexport const PostContext = React.createContext<usePost>({} as usePost);\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { PostContext } from \"../PostContext\";\r\nimport { ParseContent } from \"../../../components/hub\";\r\n\r\nimport \"../Post.css\";\r\n\r\nexport const Content: React.FC = () => {\r\n  const { post } = useContext(PostContext);\r\n\r\n  return (\r\n    <div className=\"Post-content\">\r\n      <ParseContent content={post.content} markdown={post.markdown} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { UserContext } from \"../../../App\";\r\n\r\nimport { PostContext } from \"../PostContext\";\r\nimport { updateShite } from \"../functions/updateShite\";\r\n\r\nimport \"./Stats.css\";\r\n\r\nexport const ShiteButton: React.FC = () => {\r\n  const user = useContext(UserContext);\r\n  const { post } = useContext(PostContext);\r\n\r\n  const [shite, setShite] = useState(() => post.shiters.includes(user.uid));\r\n\r\n  return (\r\n    <button\r\n      style={{ height: \"100%\", width: \"90%\" }}\r\n      className={`ShiteCount-btn btn-sharp ${\r\n        shite ? \"ShiteCount-trigger\" : \"\"\r\n      }`}\r\n      onClick={() => {\r\n        updateShite(user.uid, post.postId, shite ? \"unshite\" : \"shite\");\r\n        setShite((prev) => !prev);\r\n      }}\r\n      title={shite ? undefined : \"give this post a shite!\"}\r\n    >\r\n      {\"💩 \"}\r\n      {post.shiters.length -\r\n        (post.shiters.includes(user.uid) ? (shite ? 0 : 1) : shite ? -1 : 0)}\r\n    </button>\r\n  );\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport { db } from \"../../../App\";\r\n\r\nexport const updateShite = (\r\n  uid: string,\r\n  postId: string,\r\n  action: \"shite\" | \"unshite\"\r\n) => {\r\n  let docRef = db.collection(\"posts\").doc(postId);\r\n  docRef.get().then((doc) => {\r\n    if (action === \"shite\") {\r\n      docRef.update({\r\n        shiters: firebase.firestore.FieldValue.arrayUnion(uid),\r\n      });\r\n    } else {\r\n      docRef.update({\r\n        shiters: firebase.firestore.FieldValue.arrayRemove(uid),\r\n      });\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Stats.css\";\r\nimport \"../Post.css\";\r\n\r\ninterface TimePostedProps {\r\n  createdAt: Date;\r\n}\r\n\r\nexport const TimePosted: React.FC<TimePostedProps> = ({ createdAt }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        color: \"gray\",\r\n      }}\r\n    >\r\n      <span style={{ display: \"inline-block\" }}>\r\n        {createdAt.toLocaleDateString()}\r\n        {\", \"}\r\n      </span>\r\n      <span style={{ display: \"inline-block\" }}>\r\n        {createdAt.toLocaleTimeString()}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Stats.css\";\r\n\r\ninterface ToggleCommentsProps {\r\n  setToggleComments: React.Dispatch<React.SetStateAction<boolean>>;\r\n  commentCount: number;\r\n}\r\n\r\nexport const ToggleComments: React.FC<ToggleCommentsProps> = ({\r\n  setToggleComments,\r\n  commentCount,\r\n}) => {\r\n  return (\r\n    <button\r\n      style={{ height: \"100%\", width: \"90%\" }}\r\n      className={`btn-sharp ${commentCount ? \"\" : \"ShiteCount-btn\"}`}\r\n      onClick={() => setToggleComments(true)}\r\n    >\r\n      comments {commentCount}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { PostContext } from \"../PostContext\";\r\nimport { TimePosted, ShiteButton, ToggleComments } from \"./hub\";\r\n\r\nimport \"./Stats.css\";\r\n\r\ninterface StatsProps {\r\n  setToggleComments: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const Stats: React.FC<StatsProps> = ({ setToggleComments }) => {\r\n  const { post } = useContext(PostContext);\r\n\r\n  return (\r\n    <div className=\"Post-stats\">\r\n      <div className=\"ShiteCount\">\r\n        <ShiteButton />\r\n      </div>\r\n      <div>\r\n        <ToggleComments\r\n          setToggleComments={setToggleComments}\r\n          commentCount={post.comments ? post.comments.length : 0}\r\n        />\r\n      </div>\r\n      <div className=\"TimePosted-outer\">\r\n        <TimePosted createdAt={post.createdAt} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { v4 } from \"uuid\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { db } from \"../../../App\";\r\nimport { encodeContent } from \"../../../functions/hub\";\r\n\r\nexport const updatePost = (content: string, postId: string) => {\r\n  db.collection(\"posts\")\r\n    .doc(postId)\r\n    .update({\r\n      content: encodeContent(content),\r\n    })\r\n    .then(() => {\r\n      firebase.firestore().collection(\"activities\").doc(\"posts\").update({\r\n        type: \"edit\",\r\n        postId: postId,\r\n        uuid: v4(),\r\n      });\r\n    });\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { PostContext } from \"../PostContext\";\r\nimport { deletePost, updatePost } from \"../functions/hub\";\r\nimport { UserContext } from \"../../../App\";\r\n\r\ninterface OptionsProps {\r\n  toggleEdit: boolean;\r\n  setToggleEdit: React.Dispatch<React.SetStateAction<boolean>>;\r\n  editedContent: string;\r\n}\r\n\r\nexport const Options: React.FC<OptionsProps> = ({\r\n  toggleEdit,\r\n  setToggleEdit,\r\n  editedContent,\r\n}) => {\r\n  const user = useContext(UserContext);\r\n  const { post } = useContext(PostContext);\r\n\r\n  if (toggleEdit)\r\n    return (\r\n      <>\r\n        <button\r\n          className=\"btn-thin btn-round\"\r\n          onClick={() => setToggleEdit(false)}\r\n        >\r\n          <small>cancel</small>\r\n        </button>\r\n        <button\r\n          className=\"btn-thin btn-round btn-left\"\r\n          onClick={() => {\r\n            if (!editedContent.trim().length) return;\r\n            updatePost(editedContent.trim(), post.postId);\r\n            setToggleEdit(false);\r\n          }}\r\n        >\r\n          <small>save</small>\r\n        </button>\r\n      </>\r\n    );\r\n  else\r\n    return (\r\n      <>\r\n        <button\r\n          className=\"btn-thin btn-round\"\r\n          onClick={() => {\r\n            setToggleEdit(true);\r\n          }}\r\n        >\r\n          <small>edit</small>\r\n        </button>\r\n        <button\r\n          className=\"btn-thin btn-round btn-left\"\r\n          onClick={() => {\r\n            // eslint-disable-next-line no-restricted-globals\r\n            if (confirm(\"delete this post?\")) {\r\n              deletePost(post.postId, user.uid);\r\n            }\r\n          }}\r\n        >\r\n          <small>delete</small>\r\n        </button>\r\n      </>\r\n    );\r\n};\r\n","import { v4 } from \"uuid\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { db } from \"../../../App\";\r\n\r\nexport const deletePost = (postId: string, uid: string) => {\r\n  db.collection(\"posts\")\r\n    .doc(postId)\r\n    .get()\r\n    .then((doc) => {\r\n      doc.get(\"comments\").forEach((elem: string | undefined) => {\r\n        db.collection(\"comments\").doc(elem).delete();\r\n      });\r\n\r\n      db.collection(\"posts\").doc(postId).delete();\r\n      db.collection(\"users\")\r\n        .doc(uid)\r\n        .update({\r\n          posts: firebase.firestore.FieldValue.arrayRemove(postId),\r\n        });\r\n    });\r\n\r\n  db.collection(\"activities\").doc(\"posts\").update({\r\n    postId,\r\n    type: \"delete\",\r\n    uuid: v4(),\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nimport { InputField } from \"../../../components/hub\";\r\n\r\ninterface PostEditorProps {\r\n  editedContent: string;\r\n  setEditedContent: React.Dispatch<React.SetStateAction<string>>;\r\n  markdown: boolean;\r\n}\r\n\r\nexport const PostEditor: React.FC<PostEditorProps> = ({\r\n  editedContent,\r\n  setEditedContent,\r\n  markdown,\r\n}) => {\r\n  return (\r\n    <div className=\"Post-content\" style={{ marginBottom: \"10px\" }}>\r\n      {markdown ? \"(markdown)\" : undefined}\r\n      <InputField\r\n        content={editedContent}\r\n        setContent={setEditedContent}\r\n        rows={Math.max(editedContent.split(\"\\n\").length + 1, 4)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\ninterface SharePostProps {\r\n  postId: string;\r\n}\r\n\r\nexport const SharePost: React.FC<SharePostProps> = ({ postId }) => {\r\n  const [content, setContent] = useState(\"share\");\r\n\r\n  return (\r\n    <button\r\n      className=\"btn-thin btn-round btn-left\"\r\n      title=\"copy to clipboard\"\r\n      onClick={() => {\r\n        navigator.clipboard.writeText(\r\n          window.location.origin + \"/post/\" + postId\r\n        );\r\n        setContent(\"copied!\");\r\n      }}\r\n    >\r\n      <small>{content}</small>\r\n    </button>\r\n  );\r\n};\r\n","export const getYoutubeId = (input: string) => {\r\n  let id;\r\n  try {\r\n    id = input.match(\r\n      /(?:youtu\\.be\\/|youtube\\.com(?:\\/embed\\/|\\/v\\/|\\/watch\\?v=|\\/user\\/\\S+|\\/ytscreeningroom\\?v=|\\/sandalsResorts#\\w\\/\\w\\/.*\\/))([^\\\\/&]{10,12})/\r\n    );\r\n    return id ? id[1] : false;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\n// https://stackoverflow.com/questions/6903823/regex-for-youtube-id#answer-6904551\r\n","import React from \"react\";\r\nimport { getYoutubeId } from \"../../../functions/getYoutubeId\";\r\n\r\ninterface YoutubeProps {\r\n  content: string;\r\n}\r\n\r\nexport const Youtube: React.FC<YoutubeProps> = ({ content }) => {\r\n  return (\r\n    <div style={{ width: \"100%\", aspectRatio: \"16/9\" }}>\r\n      <iframe\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        src={`https://www.youtube.com/embed/${getYoutubeId(content)}`}\r\n        title=\"YouTube video player\"\r\n        frameBorder=\"0\"\r\n        allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowFullScreen\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nimport { CommentProps } from \"../types\";\r\nimport { useUserInfo } from \"../../../hooks/useUserInfo\";\r\nimport { UserIcon, ParseContent } from \"../../../components/hub\";\r\n\r\nimport \"./Comments.css\";\r\n\r\ninterface Props {\r\n  cmt: { comment: CommentProps; is_new: boolean };\r\n  commentSectionRef: React.MutableRefObject<HTMLDivElement | null>;\r\n  atBottom?: boolean;\r\n}\r\n\r\nexport const Comment: React.FC<Props> = ({\r\n  cmt,\r\n  commentSectionRef,\r\n  atBottom,\r\n}) => {\r\n  const commentBlock = useRef<HTMLDivElement | null>(null);\r\n  const { name } = useUserInfo(cmt.comment.author);\r\n\r\n  if (cmt.is_new && atBottom) {\r\n    const cmtSection = commentSectionRef.current;\r\n\r\n    if (cmtSection) {\r\n      cmtSection.scrollTo(0, cmtSection.scrollHeight);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={commentBlock}\r\n      className={`Comment ${cmt.is_new ? \"Comment-new\" : \"\"}`}\r\n    >\r\n      <UserIcon\r\n        type=\"small\"\r\n        uid={cmt.comment.author}\r\n        redirect={true}\r\n        hover={true}\r\n      />\r\n\r\n      <div className=\"Comment-text\">\r\n        <b className=\"Comment-name\">{name} </b>\r\n        <span className=\"Comment-time\">\r\n          {cmt.comment.createdAt.toLocaleDateString()}{\" \"}\r\n          {cmt.comment.createdAt.toLocaleTimeString()}\r\n        </span>\r\n        <ParseContent content={cmt.comment.content} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { UserContext } from \"../../../App\";\r\n\r\nimport { publishComment } from \"../functions/hub\";\r\nimport { InputField, UserIcon } from \"../../../components/hub\";\r\n\r\nimport \"./Comments.css\";\r\n\r\ninterface AddCommentProps {\r\n  postId: string;\r\n}\r\n\r\nexport const AddComment: React.FC<AddCommentProps> = ({ postId }) => {\r\n  const user = useContext(UserContext);\r\n\r\n  const [content, setContent] = useState(\"\");\r\n  const publishButton = useRef<HTMLButtonElement | null>(null);\r\n\r\n  return (\r\n    <div className=\"AddComment Comment\">\r\n      <UserIcon type=\"small\" uid={user.uid} />\r\n\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          paddingLeft: \"10px\",\r\n        }}\r\n      >\r\n        <b>{user.displayName}</b>\r\n        <div style={{ width: \"100%\" }}>\r\n          <InputField\r\n            content={content}\r\n            setContent={setContent}\r\n            publishButton={publishButton}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row-reverse\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <button\r\n            style={{ display: \"none\" }}\r\n            ref={publishButton}\r\n            onClick={() => {\r\n              if (!content.trim().length) {\r\n                return setContent(\"\");\r\n              }\r\n              publishComment(content!, user.uid, postId);\r\n              setContent(\"\");\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport { db } from \"../../../App\";\r\nimport { encodeContent } from \"../../../functions/hub\";\r\n\r\nexport const publishComment = (\r\n  content: string,\r\n  uid: string,\r\n  postId: string\r\n) => {\r\n  db.collection(\"comments\")\r\n    .add({\r\n      postId,\r\n      content: encodeContent(content),\r\n      author: uid,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      shiters: [],\r\n    })\r\n    .then((createdDoc) => {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .update({\r\n          comments: firebase.firestore.FieldValue.arrayUnion(createdDoc.id),\r\n        });\r\n    });\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport firebase from \"firebase/app\";\r\n\r\nimport { CommentProps, PostProps } from \"../types\";\r\n\r\nexport const useComments = (\r\n  postId: string,\r\n  setPost: React.Dispatch<React.SetStateAction<PostProps>>,\r\n  limit?: number\r\n) => {\r\n  const [isPostExist, setIsPostExist] = useState(true);\r\n\r\n  const [comments, setComments] = useState<\r\n    { comment: CommentProps; is_new: boolean }[]\r\n  >([]);\r\n  const [commentIds, setCommentIds] = useState<string[]>([]);\r\n\r\n  const [fetchedIds, setFetchedIds] = useState<string[]>([]);\r\n  const [initialIds, setInitialIds] = useState<string[]>([]);\r\n\r\n  const [toggle, setToggle] = useState(false);\r\n  const [end, setEnd] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isPostExist) return;\r\n\r\n    return firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .doc(postId)\r\n      .onSnapshot((doc) => {\r\n        if (!doc.exists) return setIsPostExist(false);\r\n\r\n        setCommentIds((prev) => {\r\n          return doc.get(\"comments\");\r\n        });\r\n\r\n        setPost((post) => ({\r\n          ...post,\r\n          comments: doc.get(\"comments\"),\r\n          shiters: doc.get(\"shiters\"),\r\n        }));\r\n      });\r\n  }, [isPostExist]);\r\n\r\n  const prepend_comment = (id: string) => {\r\n    setFetchedIds((prev) => [...prev, id]);\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"comments\")\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        setComments((prev) => [\r\n          {\r\n            comment: {\r\n              ...(doc.data() as CommentProps),\r\n              commentId: doc.id,\r\n              createdAt: doc.get(\"createdAt\").toDate(),\r\n            },\r\n            is_new: false,\r\n          },\r\n          ...prev.map((tuple) => ({ comment: tuple.comment, is_new: false })),\r\n        ]);\r\n      })\r\n      .catch((err) => {\r\n        setError(true);\r\n      });\r\n  };\r\n\r\n  const append_comment = (id: string) => {\r\n    setFetchedIds((prev) => [id, ...prev]);\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"comments\")\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        setComments((prev) => [\r\n          ...prev.map((tuple) => ({ comment: tuple.comment, is_new: false })),\r\n          {\r\n            comment: {\r\n              ...(doc.data() as CommentProps),\r\n              commentId: doc.id,\r\n              createdAt: doc.get(\"createdAt\").toDate(),\r\n            },\r\n            is_new: true,\r\n          },\r\n        ]);\r\n      })\r\n      .catch((err) => {\r\n        setError(true);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!commentIds.length) return;\r\n\r\n    if (!initialIds.length) {\r\n      setInitialIds(commentIds);\r\n      setEnd(false);\r\n      setToggle(true);\r\n    } else {\r\n      commentIds\r\n        .filter((id) => !initialIds.includes(id))\r\n        .filter((id) => !fetchedIds.includes(id))\r\n        .forEach((id) => {\r\n          append_comment(id);\r\n        });\r\n    }\r\n  }, [commentIds]);\r\n\r\n  useEffect(() => {\r\n    if (!toggle) return;\r\n    setToggle(false);\r\n\r\n    let toRender = initialIds\r\n      .filter((id) => !fetchedIds.includes(id))\r\n      .slice(-10)\r\n      .reverse();\r\n\r\n    toRender.forEach((id) => prepend_comment(id));\r\n  }, [toggle]);\r\n\r\n  useEffect(() => {\r\n    if (commentIds.length === fetchedIds.length) setEnd(true);\r\n  }, [commentIds, fetchedIds]);\r\n\r\n  return { comments, setToggle, end, error };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { db } from \"../../../App\";\r\n\r\nimport { PostProps } from \"../types\";\r\n\r\ninterface ActionProps {\r\n  type: \"add\" | \"edit\" | \"delete\";\r\n  postId: string;\r\n  uuid: string;\r\n}\r\n\r\nexport const useListener = (\r\n  posts: PostProps[],\r\n  setPosts: React.Dispatch<React.SetStateAction<PostProps[]>>\r\n) => {\r\n  const [action, setAction] = useState<ActionProps>();\r\n  const [lastActionId, setLastActionId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    return db\r\n      .collection(\"activities\")\r\n      .doc(\"posts\")\r\n      .onSnapshot((doc) => {\r\n        setAction(doc.data() as ActionProps);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!action || !posts) return;\r\n\r\n    if (lastActionId === \"\") return setLastActionId(action.uuid);\r\n    if (action.uuid === lastActionId) return;\r\n    setLastActionId(action.uuid);\r\n\r\n    if (action.type === \"add\") {\r\n      if (posts.find((post) => post.postId === action.postId)) return;\r\n\r\n      db.collection(\"posts\")\r\n        .doc(action.postId)\r\n        .get()\r\n        .then((new_doc) => {\r\n          setPosts((prev) => {\r\n            return [\r\n              {\r\n                ...(new_doc.data() as PostProps),\r\n                postId: new_doc.id,\r\n                createdAt: new_doc.get(\"createdAt\").toDate(),\r\n              },\r\n              ...prev,\r\n            ];\r\n          });\r\n        });\r\n    } else if (action.type === \"delete\") {\r\n      if (!posts.find((post) => post.postId === action.postId)) return;\r\n\r\n      setPosts(posts.filter((post) => post.postId !== action.postId));\r\n    } else if (action.type === \"edit\") {\r\n      if (!posts.find((post) => post.postId === action.postId)) return;\r\n\r\n      db.collection(\"posts\")\r\n        .doc(action.postId)\r\n        .get()\r\n        .then((doc) => {\r\n          setPosts((prev) => {\r\n            return prev.map((post) => {\r\n              if (post.postId !== action.postId) return post;\r\n\r\n              return {\r\n                ...(doc.data() as PostProps),\r\n                postId: doc.id,\r\n                createdAt: doc.get(\"createdAt\").toDate(),\r\n              };\r\n            });\r\n          });\r\n        });\r\n    }\r\n  }, [action, posts, lastActionId]);\r\n};\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { Comment } from \"./Comment\";\r\nimport { AddComment } from \"./AddComment\";\r\nimport { useComments } from \"../hooks/hub\";\r\nimport { PostContext } from \"../PostContext\";\r\nimport { Status } from \"../../../components/hub\";\r\n\r\nimport \"./Comments.css\";\r\nimport \"../Post.css\";\r\nimport \"../../../styles/button.css\";\r\n\r\nexport const Comments: React.FC = () => {\r\n  const { post, setPost } = useContext(PostContext);\r\n  const { comments, setToggle, end, error } = useComments(post.postId, setPost);\r\n\r\n  const commentSectionRef = useRef<HTMLDivElement | null>(null);\r\n  const [atBottom, setAtBottom] = useState(true);\r\n\r\n  if (error) return <Status content=\"error\" />;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={commentSectionRef}\r\n        className=\"Post Comment-outer\"\r\n        id={\"infinite-comment-scroll\" + post.postId}\r\n        onScroll={() => {\r\n          const cmtSection = commentSectionRef.current;\r\n\r\n          if (cmtSection && cmtSection.scrollTop > -60) {\r\n            if (atBottom === false) setAtBottom(true);\r\n          } else {\r\n            if (atBottom === true) setAtBottom(false);\r\n          }\r\n        }}\r\n      >\r\n        {comments && (\r\n          <>\r\n            <InfiniteScroll\r\n              dataLength={comments.length}\r\n              next={() => setToggle(true)}\r\n              hasMore={!end}\r\n              inverse={true}\r\n              scrollableTarget={\"infinite-comment-scroll\" + post.postId}\r\n              loader={null}\r\n            >\r\n              {comments.map((cmt, index) => {\r\n                if (index === comments.length - 1) {\r\n                  return (\r\n                    <Comment\r\n                      cmt={cmt}\r\n                      commentSectionRef={commentSectionRef}\r\n                      atBottom={atBottom}\r\n                      key={cmt.comment.commentId}\r\n                    />\r\n                  );\r\n                }\r\n                return (\r\n                  <Comment\r\n                    cmt={cmt}\r\n                    commentSectionRef={commentSectionRef}\r\n                    key={cmt.comment.commentId}\r\n                  />\r\n                );\r\n              })}\r\n            </InfiniteScroll>\r\n            <div className=\"Comment\">{end ? null : \"loading...\"}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"Comment-scroll-to-bottom-outer\">\r\n        {!atBottom && (\r\n          <button\r\n            className=\"Comment-scroll-to-bottom btn-thin btn-round btn-border\"\r\n            onClick={() => {\r\n              const cmtSection = commentSectionRef.current;\r\n\r\n              if (cmtSection) {\r\n                cmtSection.scrollTo(0, cmtSection.scrollHeight);\r\n              }\r\n            }}\r\n          >\r\n            scroll to bottom\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"Post\">\r\n        <AddComment postId={post.postId} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { PostContext } from \"./PostContext\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport { PostProps } from \"./types\";\r\nimport { Content, Stats, Options, PostEditor, SharePost, Youtube } from \"./hub\";\r\nimport { Comments } from \"./comments/Comments\";\r\nimport { UserIcon } from \"../../components/hub\";\r\nimport { getYoutubeId } from \"../../functions/getYoutubeId\";\r\n\r\nimport \"./Post.css\";\r\nimport \"../../styles/button.css\";\r\n\r\ninterface Props {\r\n  _post: PostProps;\r\n  redirect?: boolean;\r\n}\r\n\r\nexport const Post: React.FC<Props> = ({ _post, redirect }) => {\r\n  const user = useContext(UserContext);\r\n\r\n  const [editedContent, setEditedContent] = useState(\"\");\r\n  const [toggleComments, setToggleComments] = useState(false);\r\n  const [toggleEdit, setToggleEdit] = useState(false);\r\n\r\n  const [post, setPost] = useState(() => _post);\r\n  useEffect(() => {\r\n    setPost(_post);\r\n    setEditedContent(_post.content.replaceAll(\"n_n_\", \"\\n\"));\r\n  }, [_post]);\r\n\r\n  return (\r\n    <PostContext.Provider value={{ post, setPost }}>\r\n      <div\r\n        className=\"Post-outer\"\r\n        style={{\r\n          width: \"100%\",\r\n          margin: \"calc(1vh + 15px) 0\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <div style={{ padding: \"10px\" }}>\r\n          <div className=\"Post-content-upper\">\r\n            <UserIcon\r\n              type=\"large\"\r\n              uid={post.author}\r\n              withName={true}\r\n              redirect={redirect === false ? undefined : true}\r\n              hover={redirect === false ? undefined : true}\r\n            />\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              {user.uid === post.author && (\r\n                <Options\r\n                  toggleEdit={toggleEdit}\r\n                  setToggleEdit={setToggleEdit}\r\n                  editedContent={editedContent}\r\n                />\r\n              )}\r\n              <SharePost postId={post.postId} />\r\n            </div>\r\n          </div>\r\n\r\n          {toggleEdit ? (\r\n            <PostEditor\r\n              editedContent={editedContent}\r\n              setEditedContent={setEditedContent}\r\n              markdown={post.markdown}\r\n            />\r\n          ) : (\r\n            <Content />\r\n          )}\r\n        </div>\r\n\r\n        {post.image && (\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <img\r\n              src={post.image}\r\n              alt=\"just an img\"\r\n              style={{ maxWidth: \"100%\", height: \"auto\" }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {!post.image.length && getYoutubeId(post.content) && (\r\n          <Youtube content={post.content} />\r\n        )}\r\n\r\n        <div className=\"Post-strike\" />\r\n\r\n        <Stats setToggleComments={setToggleComments} />\r\n\r\n        {toggleComments && (\r\n          <>\r\n            <div className=\"Post-strike\" />\r\n            <Comments />\r\n          </>\r\n        )}\r\n      </div>\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { Post } from \"./Post\";\r\nimport { useListener } from \"./hooks/hub\";\r\nimport { useGetPrevPostsProps } from \"./hooks/usePosts\";\r\nimport { Status } from \"../../components/hub\";\r\n\r\nimport \"../../styles/button.css\";\r\n\r\nexport const Posts: React.FC<useGetPrevPostsProps> = ({ POSTS }) => {\r\n  const { posts, setPosts, setToggle, end, error } = POSTS;\r\n  useListener(posts, setPosts);\r\n\r\n  if (error) return <Status content=\"error\" />;\r\n\r\n  return (\r\n    <div>\r\n      <InfiniteScroll\r\n        dataLength={posts.length}\r\n        next={() => setToggle(true)}\r\n        hasMore={!end}\r\n        loader={<Status content=\"loading\" />}\r\n        endMessage={<Status content=\"you've reached the end of the internet\" />}\r\n      >\r\n        {posts.map((post) => (\r\n          <Post _post={post} key={post.postId} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { MakePost } from \"./MakePost\";\r\nimport { Posts } from \"../../pages/posts/Posts\";\r\nimport { useGetPrevPostsProps } from \"../../pages/posts/hooks/usePosts\";\r\n\r\nexport const Main: React.FC<useGetPrevPostsProps> = ({ POSTS }) => {\r\n  return (\r\n    <>\r\n      <MakePost />\r\n      <Posts POSTS={POSTS} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport { signOut } from \"../login/auth\";\r\nimport { updateUser, switch_theme } from \"../../functions/hub\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\ninterface MenuProps {\r\n  toggle: boolean;\r\n}\r\n\r\nexport const Menu: React.FC<MenuProps> = ({ toggle }) => {\r\n  const user = useContext(UserContext);\r\n\r\n  const handle_signOut = () => {\r\n    updateUser(user);\r\n    signOut();\r\n  };\r\n\r\n  const handle_color = () => {\r\n    const selectedColor = localStorage.getItem(\"color\");\r\n    const systemColor = window.matchMedia(\"(prefers-color-scheme: dark)\")\r\n      .matches\r\n      ? \"dark\"\r\n      : \"light\";\r\n\r\n    if (selectedColor) return selectedColor === \"dark\" ? \"light\" : \"dark\";\r\n    return systemColor === \"dark\" ? \"light\" : \"dark\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"Menu-DropDown-Items\"\r\n      style={{ display: !toggle ? \"none\" : \"\" }}\r\n    >\r\n      {window.location.pathname !== `/user/${user.uid}` && (\r\n        <button className=\"btn-thin btn-sharp btn-top btn-border\">\r\n          <Link to={`/user/${user.uid}`}>My posts</Link>\r\n        </button>\r\n      )}\r\n\r\n      <button\r\n        className=\"btn-thin btn-sharp btn-top btn-border\"\r\n        onClick={() => switch_theme(handle_color())}\r\n      >\r\n        {handle_color()} mode\r\n      </button>\r\n\r\n      <button\r\n        className=\"btn-thin btn-sharp btn-top btn-border\"\r\n        onClick={() => localStorage.clear()}\r\n      >\r\n        Clear cache\r\n      </button>\r\n\r\n      <button\r\n        className=\"btn-thin btn-sharp btn-top btn-border\"\r\n        onClick={handle_signOut}\r\n      >\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const switch_theme = (theme: string) => {\r\n  localStorage.setItem(\"color\", theme);\r\n\r\n  window.location.reload();\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport { Menu } from \"./Menu\";\r\nimport { useScroll } from \"./useScroll\";\r\nimport { UserIcon } from \"../../components/hub\";\r\n\r\nimport \"./Navbar.css\";\r\nimport \"../../styles/button.css\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n  const user = useContext(UserContext);\r\n\r\n  const [toggle, setToggle] = useState(false);\r\n  const scrollDown = useScroll();\r\n\r\n  return (\r\n    <div className={`Nav-outer ${scrollDown ? \"\" : \"Nav-hide\"}`}>\r\n      <div className=\"Nav-inner\">\r\n        <Link to=\"/\">\r\n          <h1 className=\"Nav-h1\">Shite.</h1>\r\n        </Link>\r\n\r\n        <div\r\n          className=\"Menu-DropDown\"\r\n          onMouseEnter={() => setToggle(true)}\r\n          onMouseLeave={() => setToggle(false)}\r\n          onFocus={() => setToggle(true)}\r\n          onBlur={() => setToggle(false)}\r\n        >\r\n          <UserIcon type=\"large\" uid={user.uid} hover={true} />\r\n          <Menu toggle={toggle} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// https://stackoverflow.com/questions/62497110/detect-scroll-direction-in-react-js#62497293\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const useScroll = () => {\r\n  const [scrollDir, setScrollDir] = useState<\"up\" | \"down\">(\"up\");\r\n\r\n  useEffect(() => {\r\n    const threshold = 0;\r\n    let lastScrollY = window.pageYOffset;\r\n    let ticking = false;\r\n\r\n    const updateScrollDir = () => {\r\n      const scrollY = window.pageYOffset;\r\n\r\n      if (Math.abs(scrollY - lastScrollY) < threshold) {\r\n        ticking = false;\r\n        return;\r\n      }\r\n      setScrollDir(scrollY > lastScrollY ? \"up\" : \"down\");\r\n      lastScrollY = scrollY > 0 ? scrollY : 0;\r\n      ticking = false;\r\n    };\r\n\r\n    const onScroll = () => {\r\n      if (!ticking) {\r\n        window.requestAnimationFrame(updateScrollDir);\r\n        ticking = true;\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollDir]);\r\n  return scrollDir === \"down\";\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport firebase from \"firebase/app\";\r\n\r\nimport { PostProps } from \"../../pages/posts/types\";\r\n\r\nexport const useUser = (uid: string, limit?: number) => {\r\n  const [posts, setPosts] = useState<PostProps[]>([]);\r\n  const [postIds, setPostIds] = useState<string[]>([]);\r\n  const [toFetchIds, setToFetchIds] = useState<string[]>([]);\r\n  const [requestedIds, setRequestedIds] = useState<string[]>([]);\r\n\r\n  const [toggle, setToggle] = useState(false);\r\n  const [end, setEnd] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const append_post = (id: string) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        setPosts((prev) => [\r\n          ...prev,\r\n          {\r\n            ...(doc.data() as PostProps),\r\n            postId: doc.id,\r\n            createdAt: doc.get(\"createdAt\").toDate(),\r\n          },\r\n        ]);\r\n      })\r\n      .catch((err) => {\r\n        setError(true);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPosts([]);\r\n    setPostIds([]);\r\n    setToFetchIds([]);\r\n    setRequestedIds([]);\r\n    setToggle(false);\r\n    setEnd(true);\r\n    setError(false);\r\n  }, [uid]);\r\n\r\n  useEffect(() => {\r\n    const new_ids = posts\r\n      .map((post) => post.postId)\r\n      .filter((id) => !postIds.includes(id));\r\n    setRequestedIds((prev) => [...new_ids, ...prev]);\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .get()\r\n      .then((doc) => {\r\n        if (!doc.exists) return setError(true);\r\n\r\n        setPostIds((prev) => {\r\n          return doc.get(\"posts\");\r\n        });\r\n      });\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    if (!postIds.length) return;\r\n    setToFetchIds(postIds);\r\n\r\n    if (!posts.length) {\r\n      setToggle(true);\r\n      setEnd(false);\r\n    }\r\n  }, [postIds]);\r\n\r\n  useEffect(() => {\r\n    if (!toggle) return;\r\n    setToggle(false);\r\n\r\n    let toRender = toFetchIds\r\n      .filter((id) => !requestedIds.includes(id))\r\n      .slice(-4)\r\n      .reverse();\r\n\r\n    setRequestedIds((prev) => [...prev, ...toRender]);\r\n    toRender.forEach((id) => append_post(id));\r\n  }, [toggle]);\r\n\r\n  useEffect(() => {\r\n    if (posts.map((post) => post.postId).length === toFetchIds.length)\r\n      setEnd(true);\r\n  }, [posts, toFetchIds]);\r\n\r\n  return { posts, setPosts, setToggle, end, error };\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { updateBio } from \"./updateBanner\";\r\nimport { UserContext } from \"../../../App\";\r\nimport { InputField } from \"../../../components/InputField\";\r\n\r\ninterface BioEditorProps {\r\n  editedBio: string;\r\n  setEditedBio: React.Dispatch<React.SetStateAction<string>>;\r\n  setToggleEditBio: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const BioEditor: React.FC<BioEditorProps> = ({\r\n  editedBio,\r\n  setEditedBio,\r\n  setToggleEditBio,\r\n}) => {\r\n  const user = useContext(UserContext);\r\n\r\n  return (\r\n    <div className=\"Banner-BioEditor\">\r\n      <InputField\r\n        content={editedBio}\r\n        setContent={setEditedBio}\r\n        placeholder=\"Describe who you are\"\r\n        rows={5}\r\n        style={{ textAlign: \"center\" }}\r\n      />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <button\r\n          className=\"btn-top btn-thin btn-sharp\"\r\n          onClick={() => setToggleEditBio(false)}\r\n        >\r\n          cancel\r\n        </button>\r\n        <button\r\n          className=\"btn-top btn-thin btn-sharp btn-left\"\r\n          onClick={() => {\r\n            updateBio(user.uid, editedBio);\r\n          }}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { db } from \"../../../App\";\r\nimport { encodeContent } from \"../../../functions/encodeContent\";\r\n\r\nexport const updateBio = (uid: string, bio: string) => {\r\n  db.collection(\"users\")\r\n    .doc(uid)\r\n    .update({\r\n      bio: encodeContent(bio),\r\n    })\r\n    .then(() => {\r\n      window.location.reload();\r\n    });\r\n};\r\n\r\nexport const updateCover = (uid: string, image: string) => {\r\n  db.collection(\"users\")\r\n    .doc(uid)\r\n    .update({\r\n      cover: image,\r\n    })\r\n    .then(() => {\r\n      window.location.reload();\r\n    });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { BioEditor } from \"./BioEditor\";\r\nimport { ParseContent } from \"../../../components/hub\";\r\n\r\nimport \"./Banner.css\";\r\n\r\ninterface BioProps {\r\n  bio: string;\r\n  isOwner: boolean;\r\n}\r\n\r\nexport const Bio: React.FC<BioProps> = ({ bio, isOwner }) => {\r\n  const [editedBio, setEditedBio] = useState(bio);\r\n  const [toggleEditBio, setToggleEditBio] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setEditedBio(bio.replaceAll(\"n_n_\", \"\\n\"));\r\n  }, [bio]);\r\n  return (\r\n    <>\r\n      {bio && !toggleEditBio && (\r\n        <div className=\"Banner-bio\">\r\n          <div>\r\n            <ParseContent content={bio} center={true} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isOwner &&\r\n        (toggleEditBio ? (\r\n          <BioEditor\r\n            editedBio={editedBio}\r\n            setEditedBio={setEditedBio}\r\n            setToggleEditBio={setToggleEditBio}\r\n          />\r\n        ) : (\r\n          <div\r\n            className=\"Banner-bio-edit\"\r\n            onClick={() => setToggleEditBio(true)}\r\n          >\r\n            <br />\r\n            {bio ? \"Edit Bio\" : \"Add Bio\"}\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { updateCover } from \"./updateBanner\";\r\nimport { ImageUploader } from \"../../main/ImageUploader\";\r\n\r\nimport \"./Banner.css\";\r\n\r\ninterface CoverProps {\r\n  uid: string;\r\n  isOwner: boolean;\r\n  cover: string;\r\n}\r\n\r\nexport const Cover: React.FC<CoverProps> = ({ uid, isOwner, cover }) => {\r\n  const [cover_str, setCover_str] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className={`Banner-cover-edit${cover_str.length ? \"-confirm\" : \"\"}`}>\r\n        {isOwner && (\r\n          <>\r\n            {\" \"}\r\n            <ImageUploader\r\n              image_str={cover_str}\r\n              setImage_str={setCover_str}\r\n              title=\"Edit Cover\"\r\n              title_cancel=\"Cancel\"\r\n            />\r\n            {cover_str.length ? (\r\n              <button\r\n                className=\"btn-thin btn-sharp btn-left\"\r\n                onClick={() => {\r\n                  updateCover(uid, cover_str);\r\n                }}\r\n              >\r\n                Upload\r\n              </button>\r\n            ) : undefined}\r\n          </>\r\n        )}\r\n      </div>\r\n      <img\r\n        src={cover_str.length ? cover_str : cover}\r\n        alt=\"user's cover\"\r\n        className=\"Banner-cover\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Status } from \"../../../components/hub\";\r\nimport { useUserInfo } from \"../../../hooks/useUserInfo\";\r\n\r\nimport \"./Banner.css\";\r\nimport { Bio } from \"./Bio\";\r\nimport { Cover } from \"./Cover\";\r\n\r\ninterface BannerProps {\r\n  uid: string;\r\n  isOwner: boolean;\r\n}\r\n\r\nexport const Banner: React.FC<BannerProps> = ({ uid, isOwner }) => {\r\n  const { name, avatar, bio, cover, error } = useUserInfo(uid, true);\r\n\r\n  if (error) return <Status content=\"error\" />;\r\n\r\n  return (\r\n    <div className=\"Banner\">\r\n      <div className=\"Banner-upper\">\r\n        <Cover uid={uid} isOwner={isOwner} cover={cover} />\r\n      </div>\r\n\r\n      <div className=\"Banner-lower\">\r\n        <img src={avatar} alt=\"user's avatar\" className=\"Banner-avatar\" />\r\n\r\n        <h1 className=\"Banner-name\">{name}</h1>\r\n\r\n        <Bio bio={bio} isOwner={isOwner} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { useUser } from \"./useUser\";\r\nimport { Banner } from \"./Banner/Banner\";\r\nimport { MakePost } from \"../main/MakePost\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Status } from \"../../components/Status\";\r\nimport { Post } from \"../../pages/posts/Post\";\r\nimport { useListener } from \"../../pages/posts/hooks/useListener\";\r\n\r\ninterface UserProps {\r\n  uid: string;\r\n}\r\n\r\nexport const User: React.FC<UserProps> = ({ uid }) => {\r\n  const user = useContext(UserContext);\r\n  const isOwner = uid === user.uid;\r\n\r\n  const { posts, setPosts, setToggle, end, error } = useUser(uid);\r\n  useListener(posts, setPosts);\r\n\r\n  if (error) return <Status content=\"error\" />;\r\n\r\n  return (\r\n    <>\r\n      <Banner uid={uid} isOwner={isOwner} />\r\n      {isOwner && <MakePost />}\r\n      <InfiniteScroll\r\n        dataLength={posts.length}\r\n        next={() => setToggle(true)}\r\n        hasMore={!end}\r\n        loader={<Status content=\"loading\" />}\r\n        endMessage={null}\r\n      >\r\n        {posts.map((post) => (\r\n          <Post _post={post} redirect={false} key={post.postId} />\r\n        ))}\r\n      </InfiniteScroll>\r\n      {posts.length\r\n        ? end && <Status content=\"you've reached the end of the internet\" />\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Status } from \"../../components/Status\";\r\nimport { useGetPost } from \"../../hooks/useGetPost\";\r\nimport { Post } from \"../../pages/posts/Post\";\r\n\r\ninterface OnePostProps {\r\n  postId: string;\r\n}\r\n\r\nexport const OnePost: React.FC<OnePostProps> = ({ postId }) => {\r\n  const post = useGetPost(postId);\r\n\r\n  if (!post) return <Status content=\"loading\" />;\r\n\r\n  return <Post _post={post} />;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { db } from \"../App\";\r\n\r\nimport { PostProps } from \"../pages/posts/types\";\r\n\r\nexport const useGetPost = (postId?: string) => {\r\n  const [post, setPost] = useState<PostProps>();\r\n\r\n  useEffect(() => {\r\n    if (!postId) {\r\n      db.collection(\"posts\")\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .limit(1)\r\n        .get()\r\n        .then((docs) => {\r\n          docs.forEach((doc) => {\r\n            setPost({\r\n              ...(doc.data() as PostProps),\r\n              postId: doc.id,\r\n              createdAt: doc.get(\"createdAt\").toDate(),\r\n            });\r\n          });\r\n        });\r\n    } else {\r\n      db.collection(\"posts\")\r\n        .doc(postId)\r\n        .get()\r\n        .then((doc) => {\r\n          setPost({\r\n            ...(doc.data() as PostProps),\r\n            postId: doc.id,\r\n            createdAt: doc.get(\"createdAt\").toDate(),\r\n          });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return post;\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nimport { Navbar, Main, Login, OnePost, User } from \"./routes/hub\";\r\nimport { updateUser } from \"./functions/updateUser\";\r\nimport { Status } from \"./components/hub\";\r\nimport { useGetPrevPosts } from \"./pages/posts/hooks/usePosts\";\r\n\r\nimport \"./App.css\";\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp({\r\n    apiKey: \"AIzaSyBjfz_a3vEm-JLHGZlYXt0AjWZWS1aYq7s\",\r\n    authDomain: \"tester02-b908a.firebaseapp.com\",\r\n    projectId: \"tester02-b908a\",\r\n    storageBucket: \"tester02-b908a.appspot.com\",\r\n    messagingSenderId: \"830501078103\",\r\n    appId: \"1:830501078103:web:8de8da0851e0e154f8cf12\",\r\n  });\r\n}\r\nexport const db = firebase.firestore();\r\nexport const auth = firebase.auth();\r\n\r\nexport const UserContext = React.createContext<firebase.User>(\r\n  {} as firebase.User\r\n);\r\n\r\nconst App: React.FC = () => {\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const POSTS = useGetPrevPosts();\r\n\r\n  if (error) return <Status content=\"Error\" />;\r\n  if (loading) return <Status content=\"Loading\" />;\r\n\r\n  if (!user) return <Login />;\r\n  else updateUser(user);\r\n\r\n  return (\r\n    <UserContext.Provider value={user}>\r\n      <Router basename=\"/shite\">\r\n        <Navbar />\r\n\r\n        <div className=\"Container-outer\">\r\n          <div className=\"Container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" render={() => <Main POSTS={POSTS} />} />\r\n\r\n              <Route\r\n                path=\"/user/:uid\"\r\n                exact\r\n                render={({\r\n                  match: {\r\n                    params: { uid },\r\n                  },\r\n                }) => <User uid={uid} />}\r\n              />\r\n\r\n              <Route\r\n                path=\"/post/:id\"\r\n                exact\r\n                render={({\r\n                  match: {\r\n                    params: { id },\r\n                  },\r\n                }) => <OnePost postId={id} />}\r\n              />\r\n\r\n              <Route\r\n                path=\"\"\r\n                render={() => <Status content=\"page not found\" />}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport firebase from \"firebase/app\";\r\n\r\nimport { PostProps } from \"../types\";\r\n\r\nexport const useGetPrevPosts = (limit?: number) => {\r\n  const [posts, setPosts] = useState<PostProps[]>([]);\r\n  const [toggle, setToggle] = useState(() => true);\r\n  const [end, setEnd] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (toggle) {\r\n      setToggle(false);\r\n\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .startAfter(posts.length ? posts[posts.length - 1].createdAt : \"\")\r\n        .limit(limit || 5)\r\n        .get()\r\n        .then((snap) => {\r\n          if (snap.empty) setEnd(true);\r\n\r\n          setPosts((prev) => [\r\n            ...prev,\r\n            ...snap.docs.map((doc) => {\r\n              return {\r\n                ...(doc.data() as PostProps),\r\n                postId: doc.id,\r\n                createdAt: doc.get(\"createdAt\").toDate(),\r\n              };\r\n            }),\r\n          ]);\r\n        })\r\n        .catch((err) => {\r\n          setError(true);\r\n        });\r\n    }\r\n  }, [toggle]);\r\n  return { posts, setPosts, setToggle, end, error };\r\n};\r\n\r\nexport interface useGetPrevPostsProps {\r\n  POSTS: {\r\n    posts: PostProps[];\r\n    setPosts: React.Dispatch<React.SetStateAction<PostProps[]>>;\r\n    setToggle: React.Dispatch<React.SetStateAction<boolean>>;\r\n    end: boolean;\r\n    error: boolean;\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport(\r\n  `./colors/${\r\n    localStorage.getItem(\"color\") ||\r\n    (window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n      ? \"dark\"\r\n      : \"light\")\r\n  }.css`\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}